name: Generate and Scan SBOM

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  id-token: write
  attestations: write

jobs:
  sbom-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install cyclonedx-gomod
        run: |
          go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Generate SBOM for Core Module (CycloneDX JSON)
        run: cyclonedx-gomod mod -licenses -json -output sbom-core.json

      - name: Generate SBOMs for Provider Modules
        run: |
          mkdir -p sbom-providers
          for provider in kafka nats mqtt redis s3 etcd pgsql clickhouse httpserver metrics smtp htpasswd hmacprovider; do
            echo "Generating SBOM for provider/$provider..."
            (cd provider/$provider && cyclonedx-gomod mod -licenses -json -output ../../sbom-providers/sbom-$provider.json)
          done

      - name: Merge SBOMs
        run: |
          # For now, use the core SBOM as the main one
          # In production, you might want to use a tool to merge all SBOMs
          cp sbom-core.json sbom.json
          echo "Note: Individual provider SBOMs are available in sbom-providers/"
          echo "Generated files:"
          ls -la sbom*.json
          ls -la sbom-providers/ 2>/dev/null || echo "No sbom-providers directory"

      - name: Upload Core SBOM Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-core
          path: sbom.json

      - name: Upload Provider SBOMs Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-providers
          path: sbom-providers/

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan SBOM for Vulnerabilities
        run: trivy sbom sbom.json --format table --severity CRITICAL,HIGH

      - name: Save Trivy Report
        run: trivy sbom sbom.json --format json --output trivy-report.json

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Enforce Vulnerability Policy
        run: |
          trivy sbom sbom.json --exit-code 1 --severity CRITICAL,HIGH